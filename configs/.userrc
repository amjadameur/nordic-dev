function csbuild() {
	local PROJDIR=$PWD
	local DIRBASE=$(basename $PROJDIR)

	pushd -q /
	find $PROJDIR -name "*.c" -o -name "*.h" > $PROJDIR/cscope.files
	popd -q

	if [[ ! -s $PROJDIR/cscope.files ]]; then
		rm $PROJDIR/cscope.files
		return
	fi

	cscope -Rbk 1>/dev/null 2>/dev/null
	rm $PROJDIR/cscope.files

	echo "CSCOPE_DB=$PROJDIR/cscope.out" > $DIRBASE.cscope
	echo "export CSCOPE_DB" >> $DIRBASE.cscope

	source $DIRBASE.cscope

}

function csbuild_git() {
	local GIT_ROOT=$(git rev-parse --show-toplevel 2>/dev/null)
	local CUR_DIR=$PWD

	if [[ ! -z "$GIT_ROOT" ]]; then
		cd ${GIT_ROOT}
		csbuild
		cd ${CUR_DIR}  
	fi
}

function vim() {
	local CUR_DIR=`pwd`
	local VIM_FNAME=`basename $1`
	local VIM_FDIR=`dirname $1`

	cd ${VIM_FDIR}

	if git ls-files --error-unmatch "${VIM_FNAME}" 1>/dev/null 2>/dev/null; then
		csbuild_git
	fi

	cd ${CUR_DIR}
	command vim "$@"
}

rg-vi() {
  found=`grep -rin "$1"  | head -1 | sed 's/:/ /g'`
  file=`echo $found | awk '{print $1}'`
  line=`echo $found | awk '{print $2}'`
  [[ ! -z $file ]] && vim $file +$line
}

rg-st-vi() {
  rg-vi "struct $1 {"
}

rg-en-vi() {
  rg-vi "enum $1 {"
}

rg-df-vi() {
  rg-vi "^#define $1"
}

rg-st() {
  rg "struct $1 \{"
}

rg-en() {
  rg "enum $1 \{"
}

rg-df() {
  rg "#define $1"
}

rg-fn() {
  rg " $1 \("
}

PATH=$PATH:$HOME/.vim/plugin:$HOME/.local/bin

alias rg="rg --type-add 'dt:*.{dts,dtsi,dtb}' --type-add 'Kconfig:*Kconfig' --type-add 'rc:*.{rc}'"
alias tmuxk="tmux kill-session -t"
alias tmuxa="tmux attach -d -t"
alias tmuxn="tmux new -s"
alias tmuxl="tmux ls"
